buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.11"
group= "exastris"
archivesBaseName = "Ex-Astris"

minecraft {
    version = "1.7.10-10.13.0.1208"
    assetDir = "eclipse/assets"
	
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	
	compile files("libs/Ex-Nihilo-1.36.jar")
	//compile files("libs/MineFactoryReloaded-[1.7.10]2.8.0RC3-591.jar")
	compile files("libs/TConstruct_mc1.7.10_1.6.0d40.1.jar")
	compile files("libs/Thaumcraft-1.7.10-4.2.0.1.jar")
	compile files("libs/ThermalFoundation-[1.7.10]1.0.0B3-8.jar")
	compile files("libs/TSteelworks-1.7.10-1.0.4.jar")
	compile files("libs/Waila-1.5.3a_1.7.10.jar")
	compile files("libs/RedstoneArsenal-[1.7.10]1.1.0B4-10.jar")
	compile files("libs/Blood Magic-v1.1.0(1.7.10).jar")
	compile files("libs/DragonAPI 1.7.10 V1f.jar")
	compile files("libs/RotaryCraft 1.7.10 V1f.jar")

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
