buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

//repositories {
//	maven {
//		name = "CurseForge"
//		url = "https://minecraft.curseforge.com/api" + project.curseforge_key
//	}
//}

apply plugin: 'forge'

version = "1.13"
group= "exastris"
archivesBaseName = "Ex-Astris"

minecraft {
    version = "1.7.10-10.13.2.1236"
    assetDir = "eclipse/assets"
	
}

repositories {
    maven { url 'http://maven.tterrag.com/' }
	ivy {
		name "CoFHLib"
		artifactPattern "http://addons.cursecdn.com/files/2218/257/[module]-[revision].[ext]"
	}
	ivy {
		name "CoFHCore"
        artifactPattern "http://addons.cursecdn.com/files/2218/330/[module]-[revision].[ext]"
    }
	ivy {
		name "RedstoneArsenal"
        artifactPattern "http://addons.cursecdn.com/files/2218/261/[module]-[revision].[ext]"
    }
	ivy {
		name "ThermalExpansion"
        artifactPattern "http://addons.curse.cursecdn.com/files/2218/263/[module]-[revision].[ext]"
    }
	ivy {
		name "ThermalFoundation"
        artifactPattern "http://addons.curse.cursecdn.com/files/2212/444/[module]-[revision].[ext]"
    }
	 ivy {
		name "BloodMagic"
			artifactPattern "http://addons.cursecdn.com/files/2222/331/[module]-[revision].[ext]"
	 }
}

dependencies {
   compile name: 'CoFHLib', version: "${cofhlib_version}", ext: 'jar'
	compile name: 'CoFHCore', version: "${cofhcore_version}", ext: 'jar'
	compile name: 'RedstoneArsenal', version: "${rars_version}", ext: 'jar'
	compile name: 'ThermalExpansion', version: "${texpansion_version}", ext: 'jar'
	compile name: 'ThermalFoundation', version: "${tfoundation_version}", ext: 'jar'
	compile name: 'BloodMagic', version: "${bloodmagic_version}", ext: 'jar'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
